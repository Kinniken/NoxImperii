Quick Start
-----------

1. Make sure universal binaries of SDL.framework, SDL_mixer.framework, SDL_image.framework, FreeType.framework, libxml.framework are in /Library/Frameworks. Also, the platforms folder should be on the same level as the src folder.

   Links:

   SDL Runtime Library for Mac OS X: http://www.libsdl.org/download-1.2.php
   libxml for Tiger/Leopard under 'Downloads': http://www.explain.com.au/oss/libxml2xslt.html
   FreeType Framework: http://www.kyngchaos.com/software/frameworks


2. Open naev.xcodeproj in XCode.

3. Select the "Active Build Configuration" to "Debug" or "Release". [*]

4. Hit the Build button.

5. If you chose 'Release', copy the ndata file into naev.app/Contents/Resources
   If you chose 'Debug', will run in place as long as you don't move the .app or resource files[*]

6. Double click and start playing.



[*] If you use "Debug", the executable will be using the "dat", "ai", "snd", "gfx", etc folders for data instead of the ndata packfile. Xcode will run a script that automatically creates these links, but that means you MUST NOT move the naev.app at "build/Debug/naev.app" or the links won't work and naev will crash at launch.

If you use "Release", you will need the ndata packfile available at the naev website. See README for details.


Notes
-----

This build requires Mac OS X 10.5/10.6 because it uses the libpng.dylib that comes by default on leopard.

The SDL, FreeType and libxml frameworks are copied into the binary. 

The build process runs a script (located in the scripts folder) to change the library search paths of the resulting binary so it searches inside the bundle rather than /Library/Frameworks

This version of SDLMain.m uses the Resources folder as the local path, rather than in the directory the .app is located in, so the Resources folder is where you will store the ndata.

Due to the architectures used by the frameworks, this project can only compile for 32-bit universal. This will run on Leopard and Snow Leopard. If you wish to build a 64 bit version, you will need to make a 64 compliant freetype.framework. PPC versions are unfortunately unavailable due to lack of libpng.dylib, though with some work you could integrate libpng yourself, as well as PPC versions of the above frameworks.